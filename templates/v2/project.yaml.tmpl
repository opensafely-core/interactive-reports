version: '3.0'

expectations:
  population_size: 1000

actions:

  generate_study_population_ethnicity_{{ id }}:
    run: cohortextractor:latest generate_cohort
      --study-definition study_definition_ethnicity
      --param end_date="{{ end_date }}"
      --output-dir output/{{ id }} --output-format=csv.gz
    outputs:
      highly_sensitive:
        cohort: output/{{ id }}/input_ethnicity.csv.gz


  generate_study_population_{{ id }}:
    run: cohortextractor:latest generate_cohort
      --study-definition study_definition
      --param codelist_1_path="{{ codelist_1.path }}"
      --param codelist_1_type="{{ codelist_1.type }}"
      --param codelist_2_path="{{ codelist_2.path }}"
      --param codelist_2_type="{{ codelist_2.type }}"
      --param codelist_1_frequency="{{ frequency }}"
      --param time_value="{{ time_value }}"
      --param time_scale="{{ time_scale }}"
      --param time_event="{{ time_event }}"
      --param codelist_2_comparison_date="event_1_date"
      --param operator="AND"
      --param population="{{ filter_population }}"
      --param breakdowns="{{ demographics|join(',') }}"
      --index-date-range="{{ start_date }} to {{ end_date }} by month"
      --output-dir=output/{{ id }}
      --output-format=csv.gz
    outputs:
      highly_sensitive:
        cohort: output/{{ id }}/input_*.csv.gz

  join_cohorts_{{ id }}:
    run: >
      cohort-joiner:v0.0.38
        --lhs output/{{ id }}/input_20*.csv.gz
        --rhs output/{{ id }}/input_ethnicity.csv.gz
        --output-dir output/{{ id }}/joined
    needs: [generate_study_population_{{ id }}, generate_study_population_ethnicity_{{ id }}]
    outputs:
      highly_sensitive:
        cohort: output/{{ id }}/joined/input_20*.csv.gz

  generate_measures_{{ id }}:
    run: >
      python:latest python -m analysis.measures
        --breakdowns="{{ demographics|join(',') }}"
        --input_dir="output/{{ id }}/joined"
        --measure="med_review"

    needs: [join_cohorts_{{ id }}]
    outputs:
      moderately_sensitive:
        measure: output/{{ id }}/joined/measure*rate.csv
        decile_measure: output/{{ id }}/joined/measure*rate_deciles.csv

  top_5_table_{{ id }}:
    run: >
      python:latest python analysis/top_5.py
      --codelist-1-path="{{ codelist_1.path }}"
      --codelist-2-path="{{ codelist_2.path }}"
      --output-dir="output/{{ id }}"
    needs: [generate_measures_{{ id }}]
    outputs:
      moderately_sensitive:
        tables: output/{{ id }}/joined/top_5*.csv

  deciles_chart_{{ id }}:
    run: >
      deciles-charts:v0.0.33
        --input-files output/{{ id }}/joined/measure_practice_rate_deciles.csv
        --output-dir output/{{ id }}/joined
    config:
      show_outer_percentiles: true
      tables:
        output: true
      charts:
        output: true
    needs: [generate_measures_{{ id }}]
    outputs:
      moderately_sensitive:
        deciles_charts: output/{{ id }}/joined/deciles_*.*

  plot_measure_{{ id }}:
    run: >
      python:latest python analysis/plot_measures.py
        --breakdowns="{{ demographics|join(',') }}"
        --output-dir output/{{ id }}
    needs: [generate_measures_{{ id }}]
    outputs:
      moderately_sensitive:
        measure: output/{{ id }}/plot_measure*.png

  event_counts_{{ id }}:
    run: >
      python:latest python analysis/event_counts.py --input_dir="output/{{ id }}/joined" --output_dir="output/{{ id }}"
    needs: [join_cohorts_{{ id }}]
    outputs:
      moderately_sensitive:
        measure: output/{{ id }}/event_counts.json

  generate_report_{{ id }}:
    run: >
      python:latest python analysis/render_report.py
      --report-title="{{ title }}"
      --population="{{ filter_population }}"
      --breakdowns="{{ demographics|join(',') }}"
      --codelist-1-name="{{ codelist_1.label }}"
      --codelist-2-name="{{ codelist_2.label }}"
      --codelist-1-link="{{ codelist_1.slug }}"
      --codelist-2-link="{{ codelist_2.slug }}"
      --time-value="{{ time_value }}"
      --time-scale="{{ time_scale }}"
      --time-event="{{ time_event }}"
      --start-date="{{ start_date }}"
      --end-date="{{ end_date }}"
      --num-practices=1000
      --request-id="{{ id }}"
    needs: [event_counts_{{ id }}, deciles_chart_{{ id }}, top_5_table_{{ id }}, plot_measure_{{ id }}]
    outputs:
      moderately_sensitive:
        notebook: output/{{ id }}/report.html
